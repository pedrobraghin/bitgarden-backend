// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String          @id @default(uuid())
  name       String
  username   String          @unique
  providerId String          @unique
  provider   String
  email      String          @unique
  avatarUrl  String?
  active     Boolean         @default(true)
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  profile    Profile?
  projects   ProjectMember[]
  owned      Project[]       @relation("OwnedProjects")

  @@unique([provider, providerId])
}

model Profile {
  id                        String  @id @default(uuid())
  headline                  String?
  bio                       String?
  location                  String?
  githubUrl                 String?
  linkedinUrl               String?
  websiteUrl                String?
  active                    Boolean @default(true)
  availableForOpportunities Boolean @default(true)

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id            String          @id @default(uuid())
  name          String
  description   String
  repositoryUrl String?
  ownerId       String
  owner         User            @relation("OwnedProjects", fields: [ownerId], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  stacks        ProjectStack[]
  members       ProjectMember[]
}

model Stack {
  id       String         @id @default(uuid())
  name     String         @unique
  slug     String         @unique
  type     String?
  projects ProjectStack[]
}

model ProjectStack {
  projectId String
  stackId   String
  project   Project @relation(fields: [projectId], references: [id])
  stack     Stack   @relation(fields: [stackId], references: [id])

  @@id([projectId, stackId])
}

model ProjectMember {
  projectId String
  userId    String
  role      ProjectRole

  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([projectId, userId])
}

enum ProjectRole {
  ADMIN
  MEMBER
  VIEWER
  OWNER
}
